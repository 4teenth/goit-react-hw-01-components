{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/userlogo.jpg","components/Profile/Profile.js","components/Statistics/StatisticItems.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","user","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","defaultProps","randomColor","color","Math","floor","random","toString","slice","length","StatisticItems","id","percentage","key","style","backgroundColor","Statistics","title","statistics","toUpperCase","statList","map","FriendListItem","isOnline","listItem","green","red","width","defaultLogo","FriendList","friends","friendList","transactionHistory","tableHead","tableRow","itemRow","TransactionHistory","items","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.695cbec4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3CYB0\",\"description\":\"Profile_description__q9c0G\",\"avatar\":\"Profile_avatar__3Mn5N\",\"name\":\"Profile_name__9uyJw\",\"tag\":\"Profile_tag__-DG9P\",\"location\":\"Profile_location__3ey0p\",\"stats\":\"Profile_stats__3coFz\",\"statsItem\":\"Profile_statsItem__3w2QO\",\"quantity\":\"Profile_quantity__3IGkW\",\"label\":\"Profile_label__2X9YA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3WG1s\",\"listItem\":\"FriendList_listItem__3pAeT\",\"dotStatus\":\"FriendList_dotStatus__3fUrh\",\"red\":\"FriendList_red__24sCs FriendList_dotStatus__3fUrh\",\"green\":\"FriendList_green__3SVKC FriendList_dotStatus__3fUrh\",\"avatar\":\"FriendList_avatar__UCoXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1sMnO\",\"title\":\"Statistics_title__2lDgL\",\"statList\":\"Statistics_statList__3GOBc\",\"label\":\"Statistics_label__2s-21\",\"percentage\":\"Statistics_percentage__3Qqre Statistics_label__2s-21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"font-stack\":\"Roboto, Arial, sans-serif\",\"transactionHistory\":\"TransactionHistory_transactionHistory__1WPfl\",\"tableHead\":\"TransactionHistory_tableHead__35ped\",\"itemRow\":\"TransactionHistory_itemRow__ha3Jb\"};","module.exports = __webpack_public_path__ + \"static/media/userlogo.37143a56.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => {\n  const { name, tag, location, avatar, stats } = user;\n\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  avatar:\n    'https://cdn1.iconfinder.com/data/icons/rounded-black-basic-ui/139/Gallery-RoundedBlack-512.png',\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.objectOf(PropTypes.number).isRequired,\n    avatar: PropTypes.string,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst randomColor = () => {\n  // Math.pow is slow, use constant instead.\n  let color = Math.floor(Math.random() * 16777216).toString(16);\n  // Avoid loops.\n  return '#000000'.slice(0, -color.length) + color;\n};\n\nconst StatisticItems = ({ id, label, percentage }) => (\n  <li key={id} style={{ backgroundColor: randomColor() }}>\n    {/* <div className={styles.itemBox}> */}\n    <span className={styles.label}>{label}</span>\n    <span className={styles.percentage}>{percentage}%</span>\n    {/* </div> */}\n  </li>\n);\n\nStatisticItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport StatisticItems from './StatisticItems';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title.toUpperCase()}</h2>}\n\n    <ul className={styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <StatisticItems key={id} label={label} percentage={percentage} />\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\n// Statistics.propTypes = {\n//   title: PropTypes.string,\n//   stats: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       label: PropTypes.string.isRequired,\n//       percentage: PropTypes.number.isRequired,\n//     }),\n//   ).isRequired,\n// };\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultLogo from './userlogo.jpg';\nimport styles from './FriendList.module.css';\n\n// Не используем, т.к. следуем условию задания\n// const FriendListItem = ({ userData }) => (\n//   <div>\n//     {userData.map(({ id, avatar, name, isOnline }) => (\n//       <li key={id} className={styles.listItem}>\n//         <span className={isOnline ? styles.green : styles.red}>{isOnline}</span>\n//         <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n//         <p className={styles.name}>{name}</p>\n//       </li>\n//     ))}\n//   </div>\n// );\n\nconst FriendListItem = ({ id, avatar, name, isOnline }) => (\n  <li key={id} className={styles.listItem}>\n    <span className={isOnline ? styles.green : styles.red}>{isOnline}</span>\n    <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.defaultProps = {\n  // avatar: '',\n  avatar: defaultLogo,\n  name: 'Friends name',\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\nimport FriendListItem from './FriendListItem';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(({ id, avatar, name, isOnline }) => (\n      <FriendListItem\n        key={id}\n        // OR id={id} ??\n        avatar={avatar}\n        name={name}\n        isOnline={isOnline}\n      />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n// import toUpperCaseFirstLetter from '../../utils/FirstBigLetter';\n\nconst { transactionHistory, tableHead, tableRow, itemRow } = styles;\n\nconst TransactionHistory = ({ items }) => (\n  <table className={transactionHistory}>\n    <thead className={tableHead}>\n      <tr className={tableRow}>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id} className={itemRow}>\n          {/* <td>{toUpperCaseFirstLetter(type)}</td> */}\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\n// import FriendListItem from './components/FriendList/FriendListItem';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './jsonsdata/user.json';\nimport statisticalData from './jsonsdata/statistical-data.json';\nimport friends from './jsonsdata/friends.json';\nimport transactions from './jsonsdata/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    {/* Where user it's prop(contains name, tag etc. of a component Profile), ={user} - it's an data object(user.json) */}\n    {/* <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    /> */}\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    {/* <FriendListItem userData={friends} /> */}\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}